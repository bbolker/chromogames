#Log of meetings 

/September 7 2016/ 

- First meeting
- Tasks:	 

(1) Make a github account and learn how to make and add to repositories from the terminal. 
	- username: whitere123 
	- password :L _ _ _ _ _ _ _ _ 3 
	- email : whitere@mcmaster.ca
 
(2) Learn how to profile python code. 
	- use cProfile library or line_profiler
 
(3) Find the major differences between the Jansen/Van Baleen (JV)  & Traulsen and Nowak (TM) papers 
	- JV uses spatial structure: each individual plays all of its neighbors and recieves a score (pg 2 www.nature.com/nature). Players put offspring in neighbouring cells with probability proportional to payoff. Rare mutations occur. Mating occurs with some probability (recombinatioon). 
	- JV looks at tightly coupled genes (row = 0) for which dynamics are highly unstable. They also look at loosely linked seperate genes which continously generate new tag trait combinations ( larger row) and prevent fixation to occur. 
	- TM uses a well mixed population: two individuals are choosen at random. The first individual adopts the second's strategy with probabilty (1/(1+exp(B(p1-p2)))) pi = payoff, B = selection intensity > 0. TM examines the benefit to cost ratio (b/c) for which cooperation is facilitated. They find b/c for three different genetic models.  
	- Case [9] of TM is similar to JV's model. 

/September 14 2016/ 

- Second meeting 
- Setup chromogames repository so that I can access it from my machine. Also discussed task (3) from last week's meeting. 
- Tasks: 

(1) Organize the work from MATH 4W03 into chromogames repository.
	- constructed 3 folders ./models , ./plotting & ./profiling 
	- also constructed a log file to keep a log of our progress. If you are reading this you are currently viewing the log file. 
 
(2) Study the nose python lib. Come up with several ideas for test runs.
	- If mutation for strategey is turned off and everyone uses the same strategy in blind kin than nothing should change. 
	- If using the same seed yields the same results 
	- If payoff revieved each round for each individual is <= (R+S+T+P) 
	- If mutation for colour is turned off than the colour should always be within the colour_init range 
	- If mutation for strategy is turned off in blind kin selection than the a parameter should always be in a_init 
	- Is the length of the "storage array" always equal to wxw? 
	- Have blind kin selection, set everyone to have the same strategy, put mutation on A and see if the average changes. 
	- Set A=0, B=1. Turn off B mutation and A mutation. Have colour constant at the beginning and test if average changes. 
	- If we set all of the payoffs to zero R=S=P=T than each of the cells should have an equal probability in populating the dead cell. 
	- If we set the game as blind kin selection and keep A constant with no mutation we should also see equal reproduction probabilities.  

(3) Start to profile EvoAlt8.py.  
	- Steps for installing kernprof (line_profiler) 
		(a) 'sudo apt-get install python-dev build-essential' installing cython 
		(b) 'pip install line_profiler' installing line_profiler 
		(c) Step b created an executable: /home/robert/.local/bin/kernprof 
		(d) A line by line profile is performed by typing : " /home/robert/.local/bin/kernprof -l -v profile8.py " 

(4) Read / comments 
	- www.nature.com/nature  (notes in notebook) *found the online source 
	- EvoAlt8 is the most up to date model. I added comments to it and reminded myself of the details of the model. It is a replicationg of the univie tutorial. Our next goal is to incorporate colour and the B parameter. 

/September 21 2014/ 

Meeting time: 1.5 hours

(1) Go over some of the articles that reference jansen and van baleen. We got them from web of science. (provide a rank of 1 for ones we should read and a rank of 4 for unimportant ones) ~ 1.5hr
  
(2) Modify EvolAt so that the part which computes reproductive success probability is in a function. ~1hr
	-we still need to run this simulation on collywobbles for a long period to replicate the converging values as before.
 
(3) Use .npy file to assert that running the model with the same parameters yields the same results. (with nose) ~1hr
	- figured out how to assert two arrays with numpy. Should we still use nose?
	- http://stackoverflow.com/questions/10666163/how-to-check-if-all-elements-of-a-list-matches-a-condition 
 
(4) Update log and incorpate aprx time for each task. ~0.5hr

(5) Debugging and other ~1hr 
	-Trying to get the runsim to work again. (had to specify a path at the top of runsim.py to read from ./models) 
	-organizing 
	-getting pull to work
 
(5) Discuss course outline with Bolker. 

/September 28 2016/ 

meeting time = 1.5hrs 
log time = 0.25 hr 

(1) 4P06 outline. ~0.25hr   
	- Finalized sept 29. Check email for details. 

(2) Profile the updated EvoAlt.py ~ 0.5hr 
	- check the profiling directory. Profile8* refers to code used to profile EvoAlt8. EvoAltProf* are profiling files/code for the most updated model. 

(3) Test assert with screen on collywobbles. ~ 0.5hr 
	- ssh whitere@collywobbles.math.mcmaster.ca 
	- pwrd hint: L _ _ _ _ _ _ _ _ 3 

(4) Read number 17 of lit review (make notes). ~2hr
	- rough notes done in book.  

(5) Start implementing the tests that we want to do to make sure that the basic version of the model is working the way we want. ~1.5hr
	- try to get them working in nose. 
	- was also inspired to make a "testingModels directory" to house code for testing the model (refer to sept 14 log) 

/Oct 5 2016/ 

meeting time: 1hr

(1) Email Dr. Earn and ask for a copy of his evolutionary game theory text book (pdf). 

(2) Clean up testing names. look into expit in scipy.special ~ 1hr

(3) https://swcarpentry.github.io/make-novice/ ~2 hrs

(4) Hamilton 197- "Selfish and Spiteful behaviour in an evolutionary model" ~2 - 3 hrs 


/Oct 19 2016/ 

(1) Read chapter 2 of text book! 

(2) Update Makefile and introduce explanations after running in make. ~ ask about printing even if you redirect >.   	

(3) Write down what the test cases do in readme. Also save results into binary file. ~ 

(4) Re-read paper. 

/Oct 26 2016/ 

(1) Clean up test python programs (remove the "test" from filename).  
	- are the new names suitable. Is the readme detailed enough? 

(2) stderr output the test case information 

(3) figure out how to tell make to run all *.py files. 
	- is there a more effective way to achieve this? When i kept all : *check.txt it did not work.   

(4) Read ch 3 of gametheory book. Take notes. 

(5) Make simple notes on recombination. 
	- our goal for next week was to start thinking about implementing recomination into our model. (also start thinking about test cases) 
	- http://www.biology-online.org/dictionary/Recombination  

/Nov 2 2016/ 


(1) Go over chapter 3 in more detail. (attempt some pratice questions [question 1 (a couple of them) , and try exercise 3, do not do proofs) 

(2) Go over older model and prepare to implement recombination.  
 	- refer to diagram in notes (how will we implement recombination in haploid asexual reproduction..?) 
        - introduce a recombination frequency/probability
        - introduce a recombination function which takes as input deceased cell (center cell), successful mate and nsize 
              - successful mate swaps A,B, and/or colour with random neighbour (call A+, B+, C+). Do the cells permanently swap genes or does only the offspring get this combination??  
        
          A        A+        -->         A+       A          -->   A+  (offspring) 
          B        B+        -->         B        B+         -->   B      
          C        C+        -->         C        C+         -->   C     
           
 or       A        A+        -->        A+        (offspring) 
          B        B+        -->        B 
          C        C+        -->        C  
          
/Nov 9 2016/ 

(1) Python: 
       
       f(comp_nbr=3, recomb_nbr=comp_nbr) ... can you do this in python 
       also have a "reset" range recomb_nbr 

(2) Read chapter four. 

(3) Deicide which of the two to read: 
        (i) Velicer & Plucain 2016. Bacterial territoriality as a byproduct of kin discrimination. 
        (ii) Vos & Velicer 2009. Soical conflict in centimeter and global scale populations. 
        - google scholar : author:velicer Myxococcus xanthus 

(4) Implement recombination in EvoAlt.        
	- will eventually have to make testing more efficient. 


/Nov 16 2016/ 

(1) Make find neighbour more efficient. 

(2) page 91 ex 1cd , pg 92 pr 2. 

(3) re-read bacteria paper.  

(4) Skype on Saturday. 

(5) run simulation with graphs. (smaller lattice, run less time)  

/Nov 26 2016/ 

(1) Sketch a rough copy of code to find mixed ESS for arbitrary 2x2 game. 

(2) Fix the tests (up until the last couple) so that they do not require hooks. 

(3) rename EvoAlt and fix readmes. Be consistent with fucntion cases. 
	- also our code only does neu neighbourhood... 

(4) Start talking about midterm report.  

/Nov 30 2016/ 

(1) Run TODO.md tests in ~/github/chromogames. 

(2) Topics in Game Theory. 
	- recombination 
 	- game thoery (conceptual stuff) 
	- reference bacteria paper, Nowak .. 
	- 5 pages written. (not double spaced) 
	- vision: idea from game theory that we are nice to our neighbours and that we form groups and possibly spiteful to individuals from other groups. (may eventually expand our strategy space). Decide how big to make the group? How does niceness drop off with distance (b,d) . Have paper lead into this. 
        
/Dec 7 2016/   

(1) Talk about SSH problems 
(2) Difference between synch and asynch. Also refer back to unive lab and java applet. 
	- synchronous vs asynchronous is only relevant in spatial case. 
	- 
(3) Propose rough analysis of "cheating model" 
(4) Show midterm report. 
(5) http://www.socsci.uci.edu/~jstern/uci_vpn_ubuntu/     ~ using vpn 

For testing model.. (decreasing computational cost)

(1a) Cython for converting python code to C code.  
(1b) Replicate the 45% equilibrium run with EvoAlt (new). 
(1c) Try neighbourhood size of 10 with 70x70 and see if equilibrium goes to 0.3.


/Jan 18 2017/ 

(1) The results (thus far) are as expected. It takes a long time to get the data. Box plots may be postoned.. 
	- can I run more than three runs at a time? 
	- python -u (is this flushing?)  
	- how do i get npy scripts without using git push in collywobbles. 
	
(2) Game theory textbook 
 	- I started to read the continuous games chapter (it is not complete) 
	- Maybe it would be a good idea to read the "games with relatives" chapter 

(3) Refer to notebook. 
	- game theory notes 
	- ideas for colour runs 
		- can we discuss what would be good ways to plot/ represent all of the colour runs 

(4) RcppCNPy = libary in R to import npy files 


/Jan 25 2017/ 

- Practice problem from textbook 
	- Talk about meaning of CSS 

- Check status of data needed for box plots 

- ideas for colour runs 
